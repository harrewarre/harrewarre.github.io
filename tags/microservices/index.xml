<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microservices on harre.dev</title>
    <link>https://harre.dev/tags/microservices/</link>
    <description>Recent content in Microservices on harre.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© harre.dev</copyright>
    <lastBuildDate>Sat, 31 Mar 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://harre.dev/tags/microservices/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Multiple listeners for your Service Fabric service</title>
      <link>https://harre.dev/blog/sf-multiple-listeners/</link>
      <pubDate>Sat, 31 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://harre.dev/blog/sf-multiple-listeners/</guid>
      <description>Service Fabric is a great piece of technology on the Azure platform and I&amp;rsquo;ve been using it quite a lot in recent projects. It takes away a lot of the setup and orchestration when dealing with microservices.
There comes a point where services need to talk to each other and this is easily achieved using the Remoting bits you can get from NuGet. The general way of doing this is creating an Interfaces project next to the service that contains the service interface and classes used in transport.</description>
    </item>
    
  </channel>
</rss>
