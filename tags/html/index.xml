<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HTML on harre.dev</title>
    <link>https://harre.dev/tags/html/</link>
    <description>Recent content in HTML on harre.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© harre.dev</copyright>
    <lastBuildDate>Mon, 31 Jul 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://harre.dev/tags/html/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Uploading files - a simple approach</title>
      <link>https://harre.dev/blog/uploading-files-filereader/</link>
      <pubDate>Mon, 31 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://harre.dev/blog/uploading-files-filereader/</guid>
      <description>Here&amp;rsquo;s a nice way of getting images to your server using a little bit of Javascript and HTML. We&amp;rsquo;ll be using the FileReader API that comes with Javascript and is supported in all major browsers.
For this example we&amp;rsquo;ll need some HTML from which we can select files and show a preview:
&amp;lt;div&amp;gt; &amp;lt;input id=&amp;quot;fileInput&amp;quot; type=&amp;quot;file&amp;quot; /&amp;gt; &amp;lt;button id=&amp;quot;clearFile&amp;quot;&amp;gt;Clear&amp;lt;/button&amp;gt; &amp;lt;button id=&amp;quot;uploadFile&amp;quot;&amp;gt;Upload&amp;lt;/button&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div&amp;gt; &amp;lt;label&amp;gt;Preview&amp;lt;/label&amp;gt; &amp;lt;div&amp;gt; &amp;lt;img id=&amp;quot;preview&amp;quot; /&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt;  We have an input element set to type=&amp;quot;file&amp;quot; to select the file(s) we want to upload.</description>
    </item>
    
    <item>
      <title>Simple dialogs with AngularJS and TypeScript</title>
      <link>https://harre.dev/blog/simple-dialogs-with-angularjs-and-typescript/</link>
      <pubDate>Thu, 15 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://harre.dev/blog/simple-dialogs-with-angularjs-and-typescript/</guid>
      <description>While working an Angular (1) web app I ran into the age-old problem of showing the user notifications when certain conditions are met. Show them a little pop-up, in simple terms.
So what does it take to show a popup? We know the dialog element exists but cannot be used in this case due to browser requirements. The easiest way I could think of is adding a fixed positioned div the the user on top of all other content.</description>
    </item>
    
    <item>
      <title>The dialog element</title>
      <link>https://harre.dev/blog/the-dialog-element/</link>
      <pubDate>Wed, 06 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://harre.dev/blog/the-dialog-element/</guid>
      <description>I was grinding my teeth on a z-index problem today. I needed to cover the entire webpage to show something was happening and nothing else was to interrupt. Some elements (for whatever reasons) were poking through the overlay and nothing seemed to fix my problem with the plain old position: fixed element I was using to cover the page.
So after getting fed up with looking for possible fixes I spent a bit of time looking for alternatives and came across the &amp;lt;dialog&amp;gt; element.</description>
    </item>
    
    <item>
      <title>Creating a toggle switch with HTML and CSS</title>
      <link>https://harre.dev/blog/styling-an-html-checkbox/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://harre.dev/blog/styling-an-html-checkbox/</guid>
      <description>My current project involves an interface that is 100% touch driven (no keyboard and mouse) and I was asked to turn a regular old checkbox into a toggle switch.
Initially I assumed it would be very easy but as with many things browser related, it was not. Let&amp;rsquo;s take a look at some of the things browsers do to checkboxes using this quick example:
&amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Test&amp;lt;/title&amp;gt; &amp;lt;style&amp;gt; input { border: 1px solid red; background-color: green; width: 50px; height: 50px; } &amp;lt;/style&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div&amp;gt; &amp;lt;input type=&amp;quot;text&amp;quot; /&amp;gt; &amp;lt;input type=&amp;quot;checkbox&amp;quot; /&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  Sooooo, not a whole lot it seems&amp;hellip; The text input will do as we ask but the checkbox only listens to the new width and height.</description>
    </item>
    
    <item>
      <title>Another simple loading indicator</title>
      <link>https://harre.dev/blog/another-simple-loading-indicator/</link>
      <pubDate>Thu, 14 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://harre.dev/blog/another-simple-loading-indicator/</guid>
      <description>Here is another loading indicator for when your webpage is busy waiting for a server request to come back with an answer. It&amp;rsquo;s a bar at the very top of the page this time.
Let&amp;rsquo;s look at a demo before we dive in:
See the Pen Another simple loading indicator by Sander Harrewijnen (@Harrewarre) on CodePen.
 Press the button to do some imaginary tasks that simulates a workload. A rolling bar will appear at the top of the demo to show that something is happening in the background.</description>
    </item>
    
    <item>
      <title>Animations and transforms</title>
      <link>https://harre.dev/blog/animations-and-transforms/</link>
      <pubDate>Tue, 01 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://harre.dev/blog/animations-and-transforms/</guid>
      <description>Every employee at ITQ has their own little mini-me in the form of a little character based on your appearance. Here is mine:
So I have this image sitting in a folder on my Ondrive for whenever I might need it. Queue a boring evening with not much else to do, I figured, lets animate some life into the little guy using CSS. Here is the result.
See the Pen Animated MiniMe by Sander Harrewijnen (@Harrewarre) on CodePen.</description>
    </item>
    
    <item>
      <title>The simplest loading indicator</title>
      <link>https://harre.dev/blog/the-simplest-loading-indicator/</link>
      <pubDate>Sun, 26 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://harre.dev/blog/the-simplest-loading-indicator/</guid>
      <description>I had a brainwave and dove into codepen for a little bit to doodle around and when I emerged I had this simple little loading indicator. Very simple in terms of markup and CSS (LESS in this case).
Have a look see :-)
See the Pen Loading indicator by Sander Harrewijnen (@Harrewarre) on CodePen.</description>
    </item>
    
  </channel>
</rss>
